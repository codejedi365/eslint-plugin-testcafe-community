#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

LOG_PREFIX="[.husky/post-checkout]"

. "$(dirname "$0")/hook-utils.sh"

HEAD_PREV="$1"
HEAD_NEW="$2"
CKOUT_TYPE_FLAG="$3"      # 0 = retrieve file from index, 1 = changing branches

# check if this is a post-checkout after a `git clone`
IS_CLONING=$( [ -z "$HEAD_PREV" ] && echo true || echo false )

config_git_commit_signing() {
  if [ $IS_CLONING == true ]; then
    log "Configuring Git: commit.gpgsign=true"
    if ! git config --local commit.gpgsign true; then
      error "ERROR: Failed to configure GPG signing for commits."
      error "Commits are required to be signed for this repository."
      exit 1
    elif ! git config --get user.signingkey &>/dev/null; then
      log "==============================================================="
      log "                   USER ACTION REQUIRED!"
      log "---------------------------------------------------------------"
      log "GPG commit signing is required for this repository! Please"
      log "configure your repository with the following command:"
      log "" # prefixed-newline
      log "    git config --local user.signingkey <GPG_KEY_ID>"
      log "" # prefixed-newline
      log "==============================================================="
    fi
    log "Signature exists: user.signingkey=$(git config --get user.signingkey)"
  fi
}

update_npm_dependencies() {
  # Only run if changing branches and not performing the initial `git clone`
  if [ $CKOUT_TYPE_FLAG == 1 ] && [ $IS_CLONING == false ]; then
    local changed_files=""
    # derived from https://gist.github.com/taurus227/28960de89e6c43bb3d492125368f1224
    changed_files="$(git diff-tree -r --name-only --diff-filter=M --no-commit-id $HEAD_PREV $HEAD_NEW)"

    if echo "$changed_files" | grep --quiet "package-lock.json"; then
      log "CHANGE DETECTED: 'package-lock.json'"
      log "Dependency requirements changed! This will take a few seconds..."

      local cmd="npm install --prefer-offline --no-fund --no-audit"
      if ! command -v npm &>/dev/null; then
        log "NPM not found on \$PATH, however '$cmd' is desired. Please accomplish manually."
        return
      fi
      log "$> $cmd"
      eval "$cmd"
    fi
  fi
}

config_git_commit_signing
update_npm_dependencies
