#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

[ -z "$LOG_PREFIX" ] && LOG_PREFIX="[.husky/prepare-commit-msg]"
[ -z "$CZ_RETRY" ] && CZ_RETRY=false

. "$(dirname "$0")/hook-utils.sh"

# GIT HOOK ARGV
# ------------------------
# COMMIT_MSG_FILE="$1"   # .git/MERGE_MSG | .git/SQUASH_MSG | .git/COMMIT_EDITMSG
COMMIT_MSG_SOURCE="$2" # message | template | merge | squash | commit
# COMMIT_OBJ_NAME="$3"   # commit object name

if [ "$COMMIT_MSG_SOURCE" = "merge" ]; then
  exit 0 # pass on succesfully
fi

log "Starting commitizen cli for conventional commits..."

# Default
CZ_OPTIONS="--hook"
cmd="exec </dev/tty && npx git-cz $CZ_OPTIONS || true"

if [ $CZ_RETRY = "true" ]; then
  CZ_OPTIONS="--retry"
  cmd="npx git-cz --retry || true"
fi

log "$> npx cz ${CZ_OPTIONS}"
eval "$cmd"

# env cleanup (vars, functions, utils)
unset -v COMMIT_MSG_SOURCE CZ_OPTIONS cmd
cleanup
