#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

[ -z "$LOG_PREFIX" ] && LOG_PREFIX="[.husky/post-merge]"

. "$(dirname "$0")/hook-utils.sh"

update_npm_dependencies() {
  # derived from https://gist.github.com/taurus227/28960de89e6c43bb3d492125368f1224
  changed_files=""
  output=""
  lockfiles=""
  NEEDS_INSTALL=true

  changed_files="$(git diff-tree -r --name-only --diff-filter=M --no-commit-id ORIG_HEAD HEAD)"

  if output="$(replay "$changed_files" | grep "package-lock.json")"; then
    log "CHANGE DETECTED: 'package-lock.json'"
    log "Lock files rarely merge properly. Deleting and re-generating it..."

    # concatenate filenames with space (collapse newlines)
    if ! lockfiles="$(printf '%s' "$output" | tr '\n' ' ')"; then
      error "ERROR: something bad happened. Exiting..."
      unset changed_files output lockfiles NEEDS_INSTALL
      return 1
    fi

    rm "$lockfiles"

  elif replay "$changed_files" | grep --quiet "package.json"; then
    log "CHANGE DETECTED: 'package.json'"
    log "Dependencies might of changed, lets make sure we are g2g!"
  else
    NEEDS_INSTALL=false
  fi

  if [ "$NEEDS_INSTALL" = "true" ]; then
    unset NEEDS_INSTALL

    if ! command -v npm 1>/dev/null 2>&1; then
      error "ERROR: NPM not found on \$PATH, however 'npm install' is desired. Please accomplish manually."
      unset changed_files output lockfiles
      return 1
    fi

    if ! explicit_run_cmd "npm install --prefer-offline --no-fund --no-audit"; then
      error "ERROR: Dependency installation failed."
      error "You will need to perform an install manually to continue."
      unset changed_files output lockfiles
      return 1
    fi

    changed_files="$(git diff --name-only --diff-filter=d)"
    if output="$(replay "$changed_files" | grep "package-lock.json")"; then
      log "ALL FIXED! package-lock.json needed a refresh."

      # concatenate filenames with space (collapse newlines)
      if ! lockfiles="$(printf '%s' "$output" | tr '\n' ' ')"; then
        error "ERROR: something bad happened. Exiting..."
        unset changed_files output lockfiles
        return 1
      fi

      if ! eval "git add -- $lockfiles"; then
        error "ERROR: some reason git failed.  Exiting..."
        unset changed_files output lockfiles
        return 1
      fi

      count=0
      tmp="$(mktmp)"
      replay "$output" > "$tmp"
      while IFS= read -r line <&3 || [ -n "$line" ]; do
        {
          log "STAGED: $line" || break # abort upon failure if relevant
          count=$((count+1))
        } 3<&-
      done 3< "$tmp"
      rm "$tmp"

      filenoun="file"
      if [ $count -gt 1 ]; then
        filenoun="${filenoun}s"
      fi
      log "Please commit the newly generated $filenoun for the team!"
      unset count filenoun
    fi
  fi
  unset changed_files output lockfiles NEEDS_INSTALL
}

update_npm_dependencies

# env cleanup (vars, functions, utils)
unset update_npm_dependencies
cleanup
